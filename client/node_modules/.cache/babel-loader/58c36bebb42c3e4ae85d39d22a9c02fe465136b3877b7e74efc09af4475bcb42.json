{"ast":null,"code":"// client/src/api.js\n\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// ─── STORIES ────────────────────────────────────────────────────────────\n\n// Fetch all stories\nexport const fetchStories = () => api.get(\"/stories\");\n\n// Fetch stories for a specific user\nexport const fetchUserStories = email => api.get(`/stories/user/${encodeURIComponent(email)}`);\n\n// Create a new story (supports image upload)\nexport const createStory = formData => api.post(\"/stories\", formData, {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n});\n\n// ─── THREADS ────────────────────────────────────────────────────────────\n\n// Fetch all threads\nexport const fetchThreads = () => api.get(\"/threads\");\n\n// Fetch a single thread by ID (with its replies)\nexport const fetchThreadById = id => api.get(`/threads/${id}`);\n\n// Fetch threads for a specific user\nexport const fetchUserThreads = email => api.get(`/threads/user/${encodeURIComponent(email)}`);\n\n// Create a new thread\nexport const createThread = data => api.post(\"/threads\", data);\n\n// Post a reply to an existing thread\nexport const postReply = (threadId, data) => api.post(`/threads/${threadId}/replies`, data);\nexport const createStoryWithUrl = data => api.post(\"/stories/url\", data);","map":{"version":3,"names":["axios","api","create","baseURL","headers","fetchStories","get","fetchUserStories","email","encodeURIComponent","createStory","formData","post","fetchThreads","fetchThreadById","id","fetchUserThreads","createThread","data","postReply","threadId","createStoryWithUrl"],"sources":["D:/Internship Task 1/travel-community/client/src/api.js"],"sourcesContent":["// client/src/api.js\r\n\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// ─── STORIES ────────────────────────────────────────────────────────────\r\n\r\n// Fetch all stories\r\nexport const fetchStories = () => api.get(\"/stories\");\r\n\r\n// Fetch stories for a specific user\r\nexport const fetchUserStories = (email) =>\r\n  api.get(`/stories/user/${encodeURIComponent(email)}`);\r\n\r\n// Create a new story (supports image upload)\r\nexport const createStory = (formData) =>\r\n  api.post(\"/stories\", formData, {\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n  });\r\n\r\n// ─── THREADS ────────────────────────────────────────────────────────────\r\n\r\n// Fetch all threads\r\nexport const fetchThreads = () => api.get(\"/threads\");\r\n\r\n// Fetch a single thread by ID (with its replies)\r\nexport const fetchThreadById = (id) => api.get(`/threads/${id}`);\r\n\r\n// Fetch threads for a specific user\r\nexport const fetchUserThreads = (email) =>\r\n  api.get(`/threads/user/${encodeURIComponent(email)}`);\r\n\r\n// Create a new thread\r\nexport const createThread = (data) => api.post(\"/threads\", data);\r\n\r\n// Post a reply to an existing thread\r\nexport const postReply = (threadId, data) =>\r\n  api.post(`/threads/${threadId}/replies`, data);\r\n\r\nexport const createStoryWithUrl = (data) => api.post(\"/stories/url\", data);\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;;AAEA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAMJ,GAAG,CAACK,GAAG,CAAC,UAAU,CAAC;;AAErD;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAK,IACpCP,GAAG,CAACK,GAAG,CAAC,iBAAiBG,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;;AAEvD;AACA,OAAO,MAAME,WAAW,GAAIC,QAAQ,IAClCV,GAAG,CAACW,IAAI,CAAC,UAAU,EAAED,QAAQ,EAAE;EAC7BP,OAAO,EAAE;IAAE,cAAc,EAAE;EAAsB;AACnD,CAAC,CAAC;;AAEJ;;AAEA;AACA,OAAO,MAAMS,YAAY,GAAGA,CAAA,KAAMZ,GAAG,CAACK,GAAG,CAAC,UAAU,CAAC;;AAErD;AACA,OAAO,MAAMQ,eAAe,GAAIC,EAAE,IAAKd,GAAG,CAACK,GAAG,CAAC,YAAYS,EAAE,EAAE,CAAC;;AAEhE;AACA,OAAO,MAAMC,gBAAgB,GAAIR,KAAK,IACpCP,GAAG,CAACK,GAAG,CAAC,iBAAiBG,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;;AAEvD;AACA,OAAO,MAAMS,YAAY,GAAIC,IAAI,IAAKjB,GAAG,CAACW,IAAI,CAAC,UAAU,EAAEM,IAAI,CAAC;;AAEhE;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,QAAQ,EAAEF,IAAI,KACtCjB,GAAG,CAACW,IAAI,CAAC,YAAYQ,QAAQ,UAAU,EAAEF,IAAI,CAAC;AAEhD,OAAO,MAAMG,kBAAkB,GAAIH,IAAI,IAAKjB,GAAG,CAACW,IAAI,CAAC,cAAc,EAAEM,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}