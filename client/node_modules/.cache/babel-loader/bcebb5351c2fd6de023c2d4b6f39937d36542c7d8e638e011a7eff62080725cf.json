{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internship Task 1\\\\travel-community\\\\client\\\\src\\\\components\\\\ThreadForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createThread } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreadForm = ({\n  onNewThread\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await createThread({\n        title,\n        author\n      });\n      onNewThread(res.data);\n      setTitle('');\n      setAuthor('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-2 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Thread title\",\n      className: \"w-full border p-2 rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      placeholder: \"Your name\",\n      className: \"w-full border p-2 rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n      children: \"Post Thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadForm, \"i0qI58V84bqRhcNj78JhBokYnno=\");\n_c = ThreadForm;\nexport default ThreadForm;\nvar _c;\n$RefreshReg$(_c, \"ThreadForm\");","map":{"version":3,"names":["React","useState","createThread","jsxDEV","_jsxDEV","ThreadForm","onNewThread","_s","title","setTitle","author","setAuthor","handleSubmit","e","preventDefault","res","data","err","console","error","onSubmit","className","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Internship Task 1/travel-community/client/src/components/ThreadForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createThread } from '../api';\r\n\r\nconst ThreadForm = ({ onNewThread }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await createThread({ title, author });\r\n      onNewThread(res.data);\r\n      setTitle('');\r\n      setAuthor('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-2 mb-6\">\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n        placeholder=\"Thread title\"\r\n        className=\"w-full border p-2 rounded\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={author}\r\n        onChange={e => setAuthor(e.target.value)}\r\n        placeholder=\"Your name\"\r\n        className=\"w-full border p-2 rounded\"\r\n        required\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n      >\r\n        Post Thread\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ThreadForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMb,YAAY,CAAC;QAAEM,KAAK;QAAEE;MAAO,CAAC,CAAC;MACjDJ,WAAW,CAACS,GAAG,CAACC,IAAI,CAAC;MACrBP,QAAQ,CAAC,EAAE,CAAC;MACZE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEb,OAAA;IAAMgB,QAAQ,EAAER,YAAa;IAACS,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBACtDlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAEZ,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MACxCG,WAAW,EAAC,cAAc;MAC1BN,SAAS,EAAC,2BAA2B;MACrCO,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,MAAO;MACde,QAAQ,EAAEZ,CAAC,IAAIF,SAAS,CAACE,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,WAAW;MACvBN,SAAS,EAAC,2BAA2B;MACrCO,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MACEmB,IAAI,EAAC,QAAQ;MACbF,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACvE;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACzB,EAAA,CA1CIF,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}